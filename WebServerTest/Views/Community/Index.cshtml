@model WebServerTest.Models.CommunityViewModel
@{
    ViewData["Title"] = "Community";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Community</h2>
        <a href="@Url.Action("CreatePost")" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Create Post
        </a>
    </div>

    <!-- Hashtag Filter -->
    <div class="mb-4">
        <div class="d-flex flex-wrap gap-2">
            <a href="@Url.Action("Index", new { hashtags = (string[])null, categoryId = Model.SelectedCategoryId })" 
               class="btn @(Model.SelectedHashtags.Count == 0 ? "btn-primary" : "btn-outline-primary")">
                All Posts
            </a>
            @foreach (var hashtag in Model.AllHashtags)
            {
                var isSelected = Model.SelectedHashtags.Contains(hashtag.Tag);
                var newHashtags = Model.SelectedHashtags.ToList();
                if (isSelected)
                {
                    newHashtags.Remove(hashtag.Tag);
                }
                else
                {
                    newHashtags.Add(hashtag.Tag);
                }
                
                <a href="@Url.Action("Index", new { 
                    hashtags = newHashtags.ToArray(), 
                    categoryId = Model.SelectedCategoryId 
                })" 
                   class="btn @(isSelected ? "btn-primary" : "btn-outline-primary")">
                    #@hashtag.Tag
                </a>
            }
        </div>
    </div>

    <!-- Posts -->
    <div class="row">
        <div class="col-12">
            @if (!Model.Posts.Any())
            {
                <div class="alert alert-info">
                    No posts found.
                </div>
            }
            else
            {
                foreach (var post in Model.Posts)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <h5 class="card-title">
                                    <a href="@Url.Action("Post", new { id = post.Id })" class="text-decoration-none">
                                        @post.Title
                                    </a>
                                </h5>
                                @if (Context.Session.GetInt32("UserId") != null && Context.Session.GetInt32("UserId") == post.UserID)
                                {
                                    <a href="@Url.Action("EditPost", new { id = post.Id })" class="btn btn-sm btn-outline-secondary">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                }
                            </div>
                            <p class="card-text">@post.Description</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex gap-2">
                                    @foreach (var hashtag in post.Hashtags)
                                    {
                                        var isSelected = Model.SelectedHashtags.Contains(hashtag);
                                        var newHashtags = Model.SelectedHashtags.ToList();
                                        if (isSelected)
                                        {
                                            newHashtags.Remove(hashtag);
                                        }
                                        else
                                        {
                                            newHashtags.Add(hashtag);
                                        }
                                        
                                        <a href="@Url.Action("Index", new { 
                                            hashtags = newHashtags.ToArray(), 
                                            categoryId = Model.SelectedCategoryId 
                                        })" 
                                           class="badge @(isSelected ? "bg-primary" : "bg-secondary") text-decoration-none">
                                            #@hashtag
                                        </a>
                                    }
                                </div>
                                <div class="d-flex align-items-center">
                                    <span class="me-2">@post.LikeCount likes</span>
                                    <button class="btn btn-sm btn-outline-primary like-button" data-post-id="@post.Id">
                                        <i class="bi bi-heart"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" 
                                       href="@Url.Action("Index", new { 
                                           page = i, 
                                           categoryId = Model.SelectedCategoryId,
                                           hashtags = Model.SelectedHashtags.ToArray()
                                       })">
                                        @i
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.like-button').click(function() {
                var button = $(this);
                var postId = button.data('post-id');
                
                $.post('/api/post/like/' + postId, function(response) {
                    if (response.success) {
                        var likesSpan = button.siblings('span');
                        var currentLikes = parseInt(likesSpan.text());
                        likesSpan.text((currentLikes + 1) + ' likes');
                    }
                });
            });
        });
    </script>
} 