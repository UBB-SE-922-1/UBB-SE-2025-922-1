@model List<DuolingoClassLibrary.Entities.Comment>
@inject IHtmlHelper<List<DuolingoClassLibrary.Entities.Comment>> Html

@functions {
    private string GetIndentClass(int level)
    {
        switch (level)
        {
            case 1:
                return "ms-0";
            case 2:
                return "ms-4";
            case 3:
                return "ms-5";
            default:
                return "ms-5";
        }
    }
}

<div class="comments-section mt-4">
    <h4>Comments</h4>
    
    <div id="commentsList">
        @if (!Model.Any())
        {
            <div class="alert alert-info">
                No comments yet. Be the first to comment!
            </div>
        }
        else
        {
            <div class="comments-list">
                @foreach (var comment in Model.Where(c => c.ParentCommentId == null))
                {
                    <div class="comment-thread">
                        <partial name="_Comment" model="comment" view-data="ViewData" />
                    </div>
                }
            </div>
        }
    </div>
</div>

<div class="add-comment mt-4">
    <h5>Add a Comment</h5>
    <form asp-controller="Community" asp-action="AddComment" method="post" class="mt-3">
        @Html.AntiForgeryToken()
        <input type="hidden" name="postId" value="@ViewBag.PostId" />
        <input type="hidden" name="parentCommentId" id="parentCommentId" value="" />
        <div class="mb-3">
            <textarea class="form-control" name="content" id="commentContent" rows="3" placeholder="Write your comment..." required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Post Comment</button>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            console.log('Document ready - setting up comment form handlers');
            
            // Handle reply button clicks
            $(document).on('click', '.reply-button', function() {
                console.log('Reply button clicked');
                var commentId = $(this).data('comment-id');
                var level = $(this).data('level');
                
                if (level >= 3) {
                    alert('Maximum reply depth reached');
                    return;
                }

                $('#parentCommentId').val(commentId);
                $('#commentContent').focus();
            });
        });
    </script>
} 